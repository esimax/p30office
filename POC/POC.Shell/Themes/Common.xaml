<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dxt="clr-namespace:DevExpress.Xpf.Utils.Themes;assembly=DevExpress.Xpf.Core.v13.2"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid">

    <Style TargetType="ContentControl">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>

    <BitmapImage x:Key="ApplicationIcon" UriSource="pack://application:,,,/POL.Lib.Resources;component/Standard/16/_16_xoffice.png" />

    <FlowDirection x:Key="ApplicationFlowDirection">RightToLeft</FlowDirection>
    <FontFamily x:Key="ApplicationFontFamily">Tahoma</FontFamily>
    <sys:Double x:Key="ApplicationFontSize">12</sys:Double>

    <FontFamily x:Key="ApplicationFontFamilyH1">B Titr</FontFamily>
    <sys:Double x:Key="ApplicationFontSizeH1">42</sys:Double>

    <FontFamily x:Key="ApplicationFontFamilyH2">B Titr</FontFamily>
    <sys:Double x:Key="ApplicationFontSizeH2">24</sys:Double>

    <FontFamily x:Key="PhoneNumberFontFamily">Verdana</FontFamily>
    <sys:Double x:Key="PhoneNumberFontSize">18</sys:Double>
    
    
    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
        <Setter Property="FlowDirection" Value="{DynamicResource ApplicationFlowDirection}" />
        <Setter Property="FontFamily" Value="{DynamicResource ApplicationFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ApplicationFontSize}" />
    </Style>

    <Style x:Key="TextBlockNormal" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="3" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <!--<Setter Property="FontFamily" Value="{DynamicResource ApplicationFontFamilyH2}"/>
        <Setter Property="" FontSize="{DynamicResource ApplicationFontSizeH2}"-->
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="LinkButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock TextDecorations="None">
                            <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Blue" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="#FF6600" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="UnderLineButton">
        <Setter Property="BorderThickness" Value="0,0,0,5" />
        <Setter Property="Foreground" Value="#ACACAC" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation To="#ACACAC" Storyboard.TargetName="BrBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.07" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation To="#FF6600" Storyboard.TargetName="BrBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.07" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation To="#569DE5" Storyboard.TargetName="BrBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.07" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation To="#D9D9D9" Storyboard.TargetName="BrBrush" Storyboard.TargetProperty="Color" Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimation To="#F0F4F9" Storyboard.TargetName="BgBrush" Storyboard.TargetProperty="(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0:0:0.2" />
                                        <ColorAnimation To="#E0ECF9" Storyboard.TargetName="BgBrush" Storyboard.TargetProperty="(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ColorAnimation To="Transparent" Storyboard.TargetName="BgBrush" Storyboard.TargetProperty="(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0:0:0.2" />
                                        <ColorAnimation To="Transparent" Storyboard.TargetName="BgBrush" Storyboard.TargetProperty="(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Chrome" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border.BorderBrush>
                                <SolidColorBrush x:Name="BrBrush" Color="#ACACAC" />
                            </Border.BorderBrush>

                            <Border.Background>
                                <LinearGradientBrush x:Name="BgBrush" EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="Transparent" Offset="0" />
                                    <GradientStop Color="Transparent" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>

                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#FC6600" Storyboard.TargetProperty="(Button.Foreground).Color" Duration="0:0:0.07" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="#ACACAC" Storyboard.TargetProperty="(Button.Foreground).Color" Duration="0:0:0.07" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="sb2">
                                    <Storyboard>
                                        <ColorAnimation To="#569DE5" Storyboard.TargetProperty="(Button.Foreground).Color" Duration="0:0:0.07" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="sb2" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>


        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Name="sb1">
                        <Storyboard>
                            <ColorAnimation To="Orange" Storyboard.TargetProperty="(Button.Foreground).Color" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="sb1" />
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>-->


    </Style>

    <!--<DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCaptionTemplate,ThemeName=Office2007Blue}">
        <StackPanel Width="Auto" Height="Auto" HorizontalAlignment="Right" Orientation="Horizontal" FlowDirection="{DynamicResource ApplicationFlowDirection}">
            <Image x:Name="PART_Icon" Width="Auto" Height="Auto" Margin="0" Stretch="None"
                        Source="{Binding Path=(dx:FloatingContainer.FloatingContainer).Icon, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Visibility="Collapsed" />
            <TextBlock x:Name="PART_Text" Background="{x:Null}" TextWrapping="Wrap" Margin="3" VerticalAlignment="Center" IsHitTestVisible="False"
                        Text="{Binding Path=(dx:FloatingContainer.FloatingContainer).Caption, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" 
                       FontFamily="{DynamicResource ApplicationFontFamily}" 
                       />
        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger Property="Source" SourceName="PART_Icon" Value="{x:Null}">
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>-->

    <!--<DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCaptionTemplate,ThemeName=Office2007Black}">
        <StackPanel Width="Auto" Height="Auto" HorizontalAlignment="Right" Orientation="Horizontal" FlowDirection="{DynamicResource ApplicationFlowDirection}">
            <Image x:Name="PART_Icon" Width="Auto" Height="Auto" Margin="0" Stretch="None"
                        Source="{Binding Path=(dx:FloatingContainer.FloatingContainer).Icon, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Visibility="Collapsed" />
            <TextBlock x:Name="PART_Text" Background="{x:Null}" TextWrapping="Wrap" Margin="3" VerticalAlignment="Center" IsHitTestVisible="False"
                        Text="{Binding Path=(dx:FloatingContainer.FloatingContainer).Caption, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" 
                       FontFamily="{DynamicResource ApplicationFontFamily}" 
                       Foreground="White"
                       />
        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger Property="Source" SourceName="PART_Icon" Value="{x:Null}">
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>-->



    <Style TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                            Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type dxe:TextEdit}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                            Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type dxe:ComboBoxEdit}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                            Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type dxe:ButtonEdit}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                            Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type dxe:PasswordBoxEdit}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                            Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type dxe:CheckEdit}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                            Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type dxg:LookUpEdit}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                            Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type dxe:PopupColorEdit}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                            Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    

</ResourceDictionary>
